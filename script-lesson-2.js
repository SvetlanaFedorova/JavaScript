
"use strict";

/*
1. Почему код дает именно такие результаты?

var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 в префиксной форме инкрементирование производится сразу, а возврат и присваивание — уже с обновленным значением.
d = b++; alert(d);           // 1 В постфиксной форме сначала происходит возвращение значения и операция присваивания, а потом выполняется инкрементирование.
c = (2+ ++a); alert(c);      // 5
d = (2+ b++); alert(d);      // 4
alert(a);                    // 3
alert(b);                    // 3


2. Чему будет равен x?

var a = 2;
var x = 1 + (a *= 2);

x = 5

3. Объявить две целочисленные переменные — a и b и задать им произвольные начальные значения.
Затем написать скрипт, который работает по следующему принципу:
если a и b положительные, вывести их разность;
если а и b отрицательные, вывести их произведение;
если а и b разных знаков, вывести их сумму;
Ноль можно считать положительным числом.*/

let a = 1;
let b = 2;
if (a >= 0 && b >= 0) {
    alert(a - b);
}
else if (a < 0 && b < 0) {
    alert(a * b);
}
else {
    alert(a + b);
}

/*4. Присвоить переменной а значение в промежутке [0..15].
С помощью оператора switch организовать вывод чисел от a до 15.*/

// не поняла как с switch сделать.

let a = 5;
while (a <= 15) {
    alert(a);
    a++;
}



/*5. Реализовать четыре основные арифметические операции в виде функций с двумя параметрами.
Обязательно использовать оператор return.*/

function sum(a, b) {
    return a + b;
}

function difference(a, b) {
    return a - b;
}

function composition(a, b) {
    return a * b;
}

function division(a, b) {
    return a / b;
}

let c1 = sum(10, 2);
let c2 = difference(10, 2);
let c3 = composition(10, 2);
let c4 = division(10, 2);
alert(c1, c2, c3, c4);


/*6. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 — значения аргументов, operation — строка с названием операции. 
В зависимости от переданного значения выполнить одну из арифметических операций 
(использовать функции из пункта 5) и вернуть полученное значение (применить switch).*/

function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case 'сумма':
            num = arg1 + arg2;
            break;
        case 'разница':
            num = arg1 - arg2;
            break;
        case 'произведение':
            num = arg1 * arg2;
            break;
        case 'деление':
            num = arg1 / arg2;
            break;
    }
    return num;
}

let rez = mathOperation(10, 2, 'сумма');
alert(rez);

/*7. * Сравнить null и 0. Объяснить результат.*/

let x = null;
let y = 0;
alert(x == y);

/*8. * С помощью рекурсии организовать функцию возведения числа в степень.
Формат: function power(val, pow), где val — заданное число, pow –— степень.*/


